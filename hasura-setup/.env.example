# =====================================================
# Environment Variables for Hasura + Supabase Setup
# 12thhaus Spiritual Platform
# =====================================================

# =====================================================
# SUPABASE CONFIGURATION
# =====================================================

# Get these from your Supabase project dashboard
SUPABASE_PROJECT_URL=https://your-project-ref.supabase.co
SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# Database connection details
SUPABASE_DB_HOST=db.your-project-ref.supabase.co
SUPABASE_DB_PORT=5432
SUPABASE_DB_USER=postgres
SUPABASE_DB_PASSWORD=your-supabase-password
SUPABASE_DB_NAME=postgres

# Full database URL for Hasura
HASURA_GRAPHQL_DATABASE_URL=postgresql://postgres:your-supabase-password@db.your-project-ref.supabase.co:5432/postgres

# =====================================================
# HASURA CONFIGURATION
# =====================================================

# Generate a strong random string for admin access
HASURA_GRAPHQL_ADMIN_SECRET=your-super-secret-admin-key

# JWT secret for authentication - generate using: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
HASURA_GRAPHQL_JWT_SECRET={"type":"HS256","key":"your-256-bit-jwt-secret-key-here"}

# Hasura development settings
HASURA_GRAPHQL_ENABLE_CONSOLE=true
HASURA_GRAPHQL_DEV_MODE=true
HASURA_GRAPHQL_ENABLED_LOG_TYPES=startup,http-log,webhook-log,websocket-log,query-log

# =====================================================
# AUTHENTICATION CONFIGURATION
# =====================================================

# Auth webhook endpoint (your backend authentication service)
HASURA_GRAPHQL_AUTH_HOOK=http://localhost:3000/auth/webhook

# JWT claims namespace
JWT_CLAIMS_NAMESPACE=https://hasura.io/jwt/claims

# =====================================================
# EXTERNAL SERVICES
# =====================================================

# N8N Integration
N8N_WEBHOOK_ENDPOINT=http://localhost:5678/webhook
N8N_API_TOKEN=your-n8n-api-token
N8N_BASE_URL=http://localhost:5678

# Redis Configuration
REDIS_PASSWORD=your-redis-password
REDIS_URL=redis://localhost:6379

# =====================================================
# MONITORING & OBSERVABILITY
# =====================================================

# Grafana
GRAFANA_ADMIN_PASSWORD=your-grafana-password

# Datadog (optional)
DATADOG_API_KEY=your-datadog-api-key

# Sentry (optional)
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# =====================================================
# DEPLOYMENT CONFIGURATION
# =====================================================

# Environment
NODE_ENV=development
APP_ENV=development

# Domain configuration
APP_DOMAIN=localhost
GRAPHQL_DOMAIN=graphql.localhost
API_DOMAIN=api.localhost

# SSL Configuration
SSL_CERT_PATH=./certs/server.crt
SSL_KEY_PATH=./certs/server.key
SUPABASE_SSL_CERT_PATH=./certs/supabase-ca-certificate.crt

# =====================================================
# BACKUP & STORAGE
# =====================================================

# AWS S3 (for backups)
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=us-east-1
BACKUP_BUCKET=langgraph-hasura-backups

# =====================================================
# FEATURE FLAGS
# =====================================================

# Enable/disable features
ENABLE_SUBSCRIPTIONS=true
ENABLE_QUERY_CACHING=true
ENABLE_RATE_LIMITING=true
ENABLE_METRICS=true
ENABLE_TRACING=false

# =====================================================
# PERFORMANCE TUNING
# =====================================================

# Database connection pool
DB_POOL_SIZE=20
DB_POOL_TIMEOUT=30

# Query limits
MAX_QUERY_DEPTH=15
MAX_QUERY_NODES=1000
QUERY_TIMEOUT=30

# Rate limiting
RATE_LIMIT_GLOBAL=1000
RATE_LIMIT_USER=100
RATE_LIMIT_ADMIN=1000

# =====================================================
# WEBHOOK ENDPOINTS
# =====================================================

# Your application webhook endpoints
PROJECT_CREATED_WEBHOOK=http://localhost:5678/webhook/project-created
WORKFLOW_STATUS_WEBHOOK=http://localhost:3000/webhooks/workflow-status
ONBOARDING_PROGRESS_WEBHOOK=http://localhost:5678/webhook/onboarding-progress

# Cron job endpoints
CLEANUP_SESSIONS_ENDPOINT=http://localhost:3000/cron/cleanup-sessions
USAGE_REPORTS_ENDPOINT=http://localhost:3000/cron/usage-reports
SUBSCRIPTION_CHECK_ENDPOINT=http://localhost:3000/cron/subscription-check

# =====================================================
# SECURITY CONFIGURATION
# =====================================================

# CORS settings
CORS_ALLOWED_ORIGINS=http://localhost:3000,https://app.langgraph-platform.com
CORS_ALLOWED_METHODS=GET,POST,PUT,PATCH,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=Content-Type,Authorization,X-Requested-With

# Session security
SESSION_SECRET=your-session-secret-key
SESSION_TIMEOUT=86400

# API rate limiting
API_RATE_LIMIT_WINDOW=3600
API_RATE_LIMIT_MAX=1000

# =====================================================
# DEVELOPMENT TOOLS
# =====================================================

# Hasura CLI endpoint
HASURA_ENDPOINT=http://localhost:8080

# Database migration settings
MIGRATION_AUTO_APPLY=false
MIGRATION_BACKUP_ENABLED=true

# Console assets
HASURA_GRAPHQL_CONSOLE_ASSETS_DIR=/srv/console-assets

# =====================================================
# TESTING CONFIGURATION
# =====================================================

# Test database
TEST_DATABASE_URL=postgresql://postgres:password@localhost:5433/langgraph_test

# Test JWT secret
TEST_JWT_SECRET=test-jwt-secret-for-development-only

# Mock service endpoints
MOCK_N8N_ENDPOINT=http://localhost:5679
MOCK_AUTH_ENDPOINT=http://localhost:3001